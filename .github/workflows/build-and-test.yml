name: Build and Test

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test imports and basic functionality
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        python -c "import sys; sys.path.insert(0, 'src'); import tee_wallet; print('✓ tee_wallet imported successfully')"
        python -c "import sys; sys.path.insert(0, 'src'); import spoon_integration; print('✓ spoon_integration imported successfully')"

    - name: Run basic functionality test
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        python -c "
        import sys, asyncio
        sys.path.insert(0, 'src')
        from tee_wallet import TEEWallet, TransactionRequest
        
        async def test():
            wallet = TEEWallet('test')
            tx = TransactionRequest('0x742d35Cc6634C0532925a3b844Bc9e7595f1234', 100.0)
            result = await wallet.secure_sign(tx)
            assert result['success']
            print('✓ Basic functionality test passed')
        
        asyncio.run(test())
        "

    - name: Validate project structure
      run: |
        echo "Checking project structure..."
        test -f src/tee_wallet.py || (echo "Missing tee_wallet.py" && exit 1)
        test -f src/spoon_integration.py || (echo "Missing spoon_integration.py" && exit 1)
        test -f src/enhanced_tee_wallet.py || (echo "Missing enhanced_tee_wallet.py" && exit 1)
        test -f src/hsm_support.py || (echo "Missing hsm_support.py" && exit 1)
        test -d spoonos || (echo "Missing spoonos submodule" && exit 1)
        echo "✓ Project structure validated"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        pip install bandit safety

    - name: Run Bandit security scan
      run: |
        bandit -r src/ -ll || true

    - name: Check for known vulnerabilities
      run: |
        pip freeze > current-requirements.txt
        safety check -r current-requirements.txt || true